name: Lisp CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  mac-build:
    if: contains(github.event.head_commit.message, 'COMPILEMAC') || contains(github.event.head_commit.message, 'COMPILEALL')
    runs-on: macos-latest
    outputs:
      mac_artifact: ${{ steps.mac_upload.outputs.artifact-name }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install SBCL
        run: brew install sbcl

      - name: Setup Quicklisp
        run: |
          curl -O https://beta.quicklisp.org/quicklisp.lisp &&
          sbcl --non-interactive --load quicklisp.lisp \
            --eval '(quicklisp-quickstart:install)'

      - name: Cache Quicklisp packages
        uses: actions/cache@v4
        with:
          path: ~/quicklisp/
          key: ${{ runner.os }}-quicklisp-${{ hashFiles('**/*.asd', '**/*.lisp') }}
          restore-keys: |
            ${{ runner.os }}-quicklisp-

      - name: Move Lisp files to Quicklisp local-projects directory
        run: |
          mkdir -p ~/quicklisp/local-projects/
          cp src/features.asd src/features.lisp ~/quicklisp/local-projects/

      - name: Register local projects with Quicklisp
        run: |
          sbcl --non-interactive \
            --load ~/quicklisp/setup.lisp \
            --eval '(ql:register-local-projects)' \
            --eval '(quit)'

      - name: Build and save the executable genppi 4g
        run: |
          sbcl --noinform --dynamic-space-size 4096 --control-stack-size 20 \
            --load ~/quicklisp/setup.lisp \
            --load src/genppi.lisp \
            --eval "(save-lisp-and-die \"binaries/genppi4g-Mac.x\" \
              :executable t :save-runtime-options t :toplevel 'main)"

      - name: Build and save the executable genppi 8g
        run: |
          sbcl --noinform --dynamic-space-size 8192 --control-stack-size 20 \
            --load ~/quicklisp/setup.lisp \
            --load src/genppi.lisp \
            --eval "(save-lisp-and-die \"binaries/genppi8g-Mac.x\" \
              :executable t :save-runtime-options t :toplevel 'main)"

      - name: Build and save the executable genppi 16g
        run: |
          sbcl --noinform --dynamic-space-size 16384 --control-stack-size 20 \
            --load ~/quicklisp/setup.lisp \
            --load src/genppi.lisp \
            --eval "(save-lisp-and-die \"binaries/genppi16g-Mac.x\" \
              :executable t :save-runtime-options t :toplevel 'main)"

      - name: Build and save the executable genppi 32g
        run: |
          sbcl --noinform --dynamic-space-size 32768 --control-stack-size 20 \
            --load ~/quicklisp/setup.lisp \
            --load src/genppi.lisp \
            --eval "(save-lisp-and-die \"binaries/genppi32g-Mac.x\" \
              :executable t :save-runtime-options t :toplevel 'main)"

      - name: Build and save the executable genppidb 4g
        run: |
          sbcl --noinform --dynamic-space-size 4096 --control-stack-size 20 \
            --load ~/quicklisp/setup.lisp \
            --load src/genppidb.lisp \
            --eval "(save-lisp-and-die \"binaries/genppidb4g-Mac.x\" \
              :executable t :save-runtime-options t :toplevel 'main)"

      - name: Build and save the executable genppidb 8g
        run: |
          sbcl --noinform --dynamic-space-size 8192 --control-stack-size 20 \
            --load ~/quicklisp/setup.lisp \
            --load src/genppidb.lisp \
            --eval "(save-lisp-and-die \"binaries/genppidb8g-Mac.x\" \
              :executable t :save-runtime-options t :toplevel 'main)"

      - name: Build and save the executable genppidb 16g
        run: |
          sbcl --noinform --dynamic-space-size 16384 --control-stack-size 20 \
            --load ~/quicklisp/setup.lisp \
            --load src/genppidb.lisp \
            --eval "(save-lisp-and-die \"binaries/genppidb16g-Mac.x\" \
              :executable t :save-runtime-options t :toplevel 'main)"

      - name: Build and save the executable genppidb 32g
        run: |
          sbcl --noinform --dynamic-space-size 32768 --control-stack-size 20 \
            --load ~/quicklisp/setup.lisp \
            --load src/genppidb.lisp \
            --eval "(save-lisp-and-die \"binaries/genppidb32g-Mac.x\" \
              :executable t :save-runtime-options t :toplevel 'main)"

      # --- CORREÇÃO: Faz o upload APENAS dos executáveis do Mac que acabaram de ser compilados ---
      - name: Upload the macOS binaries
        id: mac_upload
        uses: actions/upload-artifact@v4
        with:
          name: genppi-mac-binaries
          path: binaries/genppi*-Mac.x

  windows-build:
    if: contains(github.event.head_commit.message, 'COMPILEWIN') || contains(github.event.head_commit.message, 'COMPILEALL')
    runs-on: windows-latest
    outputs:
      win_artifact: ${{ steps.win_upload.outputs.artifact-name }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install SBCL
        run: choco install sbcl

      - name: Setup Quicklisp
        run: |
          powershell -Command "Invoke-WebRequest -Uri https://beta.quicklisp.org/quicklisp.lisp -OutFile quicklisp.lisp"
          & sbcl --non-interactive --load quicklisp.lisp --eval "(quicklisp-quickstart:install)"

      - name: Cache Quicklisp packages
        uses: actions/cache@v4
        with:
          path: "$env:USERPROFILE\\quicklisp\\"
          key: ${{ runner.os }}-quicklisp-${{ hashFiles('**/*.asd', '**/*.lisp') }}
          restore-keys: |
            ${{ runner.os }}-quicklisp-

      - name: Move Lisp files to Quicklisp local-projects directory
        run: |
          Copy-Item -Path src\features.asd, src\features.lisp -Destination "$env:USERPROFILE\quicklisp\local-projects"

      - name: Register local projects with Quicklisp
        run: |
          sbcl --non-interactive --load "$env:USERPROFILE\\quicklisp\\setup.lisp" --eval "(ql:register-local-projects)" --eval "(quit)"

      - name: Build and save the executable genppi 4g
        run: |
          sbcl --noinform --dynamic-space-size 4096 --control-stack-size 20 `
            --load "$env:USERPROFILE\\quicklisp\\setup.lisp" `
            --load src/genppi.lisp `
            --eval "(save-lisp-and-die \"binaries/genppi4g-Win.exe\" :executable t :save-runtime-options t :toplevel 'main)"

      - name: Build and save the executable genppi 8g
        run: |
          sbcl --noinform --dynamic-space-size 8192 --control-stack-size 20 `
            --load "$env:USERPROFILE\\quicklisp\\setup.lisp" `
            --load src/genppi.lisp `
            --eval "(save-lisp-and-die \"binaries/genppi8g-Win.exe\" :executable t :save-runtime-options t :toplevel 'main)"

      - name: Build and save the executable genppi 16g
        run: |
          sbcl --noinform --dynamic-space-size 16384 --control-stack-size 20 `
            --load "$env:USERPROFILE\\quicklisp\\setup.lisp" `
            --load src/genppi.lisp `
            --eval "(save-lisp-and-die \"binaries/genppi16g-Win.exe\" :executable t :save-runtime-options t :toplevel 'main)"

      - name: Build and save the executable genppi 32g
        run: |
          sbcl --noinform --dynamic-space-size 32768 --control-stack-size 20 `
            --load "$env:USERPROFILE\\quicklisp\\setup.lisp" `
            --load src/genppi.lisp `
            --eval "(save-lisp-and-die \"binaries/genppi32g-Win.exe\" :executable t :save-runtime-options t :toplevel 'main)"

      - name: Build and save the executable genppidb 4g
        run: |
          sbcl --noinform --dynamic-space-size 4096 --control-stack-size 20 `
            --load "$env:USERPROFILE\\quicklisp\\setup.lisp" `
            --load src/genppidb.lisp `
            --eval "(save-lisp-and-die \"binaries/genppidb4g-Win.exe\" :executable t :save-runtime-options t :toplevel 'main)"

      - name: Build and save the executable genppidb 8g
        run: |
          sbcl --noinform --dynamic-space-size 8192 --control-stack-size 20 `
            --load "$env:USERPROFILE\\quicklisp\\setup.lisp" `
            --load src/genppidb.lisp `
            --eval "(save-lisp-and-die \"binaries/genppidb8g-Win.exe\" :executable t :save-runtime-options t :toplevel 'main)"

      - name: Build and save the executable genppidb 16g
        run: |
          sbcl --noinform --dynamic-space-size 16384 --control-stack-size 20 `
            --load "$env:USERPROFILE\\quicklisp\\setup.lisp" `
            --load src/genppidb.lisp `
            --eval "(save-lisp-and-die \"binaries/genppidb16g-Win.exe\" :executable t :save-runtime-options t :toplevel 'main)"

      - name: Build and save the executable genppidb 32g
        run: |
          sbcl --noinform --dynamic-space-size 32768 --control-stack-size 20 `
            --load "$env:USERPROFILE\\quicklisp\\setup.lisp" `
            --load src/genppidb.lisp `
            --eval "(save-lisp-and-die \"binaries/genppidb32g-Win.exe\" :executable t :save-runtime-options t :toplevel 'main)"

      # --- CORREÇÃO: Faz o upload APENAS dos executáveis do Windows que acabaram de ser compilados ---
      - name: Upload the Windows binaries
        id: win_upload
        uses: actions/upload-artifact@v4
        with:
          name: genppi-win-binaries
          path: binaries/genppi*-Win.exe

  linux-build:
    if: contains(github.event.head_commit.message, 'COMPILELINUX') || contains(github.event.head_commit.message, 'COMPILEALL')
    runs-on: ubuntu-latest
    outputs:
      linux_artifact: ${{ steps.linux_upload.outputs.artifact-name }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install SBCL
        run: sudo apt-get update && sudo apt-get install -y sbcl curl zip

      - name: Setup Quicklisp
        run: |
          curl -O https://beta.quicklisp.org/quicklisp.lisp
          sbcl --non-interactive --load quicklisp.lisp \
            --eval '(quicklisp-quickstart:install)'

      - name: Cache Quicklisp packages
        uses: actions/cache@v4
        with:
          path: ~/quicklisp/
          key: ${{ runner.os }}-quicklisp-${{ hashFiles('**/*.asd', '**/*.lisp') }}
          restore-keys: |
            ${{ runner.os }}-quicklisp-

      - name: Move Lisp files to Quicklisp local-projects directory
        run: |
          mkdir -p ~/quicklisp/local-projects/
          cp src/features.asd src/features.lisp ~/quicklisp/local-projects/

      - name: Register local projects with Quicklisp
        run: |
          sbcl --non-interactive \
            --load ~/quicklisp/setup.lisp \
            --eval '(ql:register-local-projects)' \
            --eval '(quit)'

      - name: Build and save the executable genppi 4g
        run: |
          sbcl --noinform --dynamic-space-size 4096 --control-stack-size 20 \
            --load ~/quicklisp/setup.lisp \
            --load src/genppi.lisp \
            --eval "(save-lisp-and-die \"binaries/genppi4g-Linux.x\" \
              :executable t :save-runtime-options t :toplevel 'main)"

      - name: Build and save the executable genppi 8g
        run: |
          sbcl --noinform --dynamic-space-size 8192 --control-stack-size 20 \
            --load ~/quicklisp/setup.lisp \
            --load src/genppi.lisp \
            --eval "(save-lisp-and-die \"binaries/genppi8g-Linux.x\" \
              :executable t :save-runtime-options t :toplevel 'main)"

      - name: Build and save the executable genppi 16g
        run: |
          sbcl --noinform --dynamic-space-size 16384 --control-stack-size 20 \
            --load ~/quicklisp/setup.lisp \
            --load src/genppi.lisp \
            --eval "(save-lisp-and-die \"binaries/genppi16g-Linux.x\" \
              :executable t :save-runtime-options t :toplevel 'main)"

      - name: Build and save the executable genppi 32g
        run: |
          sbcl --noinform --dynamic-space-size 32768 --control-stack-size 20 \
            --load ~/quicklisp/setup.lisp \
            --load src/genppi.lisp \
            --eval "(save-lisp-and-die \"binaries/genppi32g-Linux.x\" \
              :executable t :save-runtime-options t :toplevel 'main)"

      - name: Build and save the executable genppidb 4g
        run: |
          sbcl --noinform --dynamic-space-size 4096 --control-stack-size 20 \
            --load ~/quicklisp/setup.lisp \
            --load src/genppidb.lisp \
            --eval "(save-lisp-and-die \"binaries/genppidb4g-Linux.x\" \
              :executable t :save-runtime-options t :toplevel 'main)"

      - name: Build and save the executable genppidb 8g
        run: |
          sbcl --noinform --dynamic-space-size 8192 --control-stack-size 20 \
            --load ~/quicklisp/setup.lisp \
            --load src/genppidb.lisp \
            --eval "(save-lisp-and-die \"binaries/genppidb8g-Linux.x\" \
              :executable t :save-runtime-options t :toplevel 'main)"

      - name: Build and save the executable genppidb 16g
        run: |
          sbcl --noinform --dynamic-space-size 16384 --control-stack-size 20 \
            --load ~/quicklisp/setup.lisp \
            --load src/genppidb.lisp \
            --eval "(save-lisp-and-die \"binaries/genppidb16g-Linux.x\" \
              :executable t :save-runtime-options t :toplevel 'main)"

      - name: Build and save the executable genppidb 32g
        run: |
          sbcl --noinform --dynamic-space-size 32768 --control-stack-size 20 \
            --load ~/quicklisp/setup.lisp \
            --load src/genppidb.lisp \
            --eval "(save-lisp-and-die \"binaries/genppidb32g-Linux.x\" \
              :executable t :save-runtime-options t :toplevel 'main)"

      # --- CORREÇÃO: Faz o upload APENAS dos executáveis do Linux que acabaram de ser compilados ---
      - name: Upload the Linux binaries
        id: linux_upload
        uses: actions/upload-artifact@v4
        with:
          name: genppi-linux-binaries
          path: binaries/genppi*-Linux.x

  gather-artifacts:
    needs: [mac-build, windows-build, linux-build]
    if: |
      always() &&
      (
        contains(github.event.head_commit.message, 'COMPILEALL') ||
        contains(github.event.head_commit.message, 'COMPILEMAC') ||
        contains(github.event.head_commit.message, 'COMPILEWIN') ||
        contains(github.event.head_commit.message, 'COMPILELINUX')
      )
    runs-on: ubuntu-latest
    steps:
      - name: Create a dedicated directory for final binaries
        run: mkdir -p final_binaries/windows final_binaries/macos final_binaries/linux

      - name: Download and place Windows artifacts
        # A condição 'if' evita erro se o job de Windows não rodar
        if: needs.windows-build.result == 'success'
        uses: actions/download-artifact@v4
        with:
          name: genppi-win-binaries
          path: final_binaries/windows/

      - name: Download and place macOS artifacts
        # A condição 'if' evita erro se o job de macOS não rodar
        if: needs.mac-build.result == 'success'
        uses: actions/download-artifact@v4
        with:
          name: genppi-mac-binaries
          path: final_binaries/macos/

      - name: Download and place Linux artifacts
        # A condição 'if' evita erro se o job de Linux não rodar
        if: needs.linux-build.result == 'success'
        uses: actions/download-artifact@v4
        with:
          name: genppi-linux-binaries
          path: final_binaries/linux/

      - name: List final directory structure before zipping
        run: ls -R final_binaries

      - name: Upload all binaries as a single zip artifact
        uses: actions/upload-artifact@v4
        with:
          name: all-genppi-binaries
          path: final_binaries/
