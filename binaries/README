GENPPI is a software, written in Common Lisp and compiled with SBCL, to create complex networks of predicted proteins from tens or hundreds of genomes. Your main limitation is the amount of RAM in your server. For instance, using a conventional computer of 8 Gigabytes of RAM the software can deal with at least 50 genomes, each one, possessing in average 2200 proteins. However, this same machine is not capable of processing 80 genomes with an average of five thousand proteins. To achieve this last task well done we need to compile GENPPI to use at least 8 Gigabytes of RAM and use the program version capable of storing the bulk data on disk instead of memory, the GENPPIDB executable. For now, I compiled all version available at the binaries folder to use 4G of RAM. While I do not release the source code, if you need a version compiled with more RAM, please get in touch with me. SBCL includes the whole core of libraries for each executable, and it explains the size of the software in megabytes. 
Till today I haven't a graphical interface for GENPPI, since I conceived it as a command-line tool for the Linux OS. Calling the software without any arguments results in it printing all the possible parameters and their combinations. It also happens when starting the program with the -help option. 
I will show a fast track to obtain results with this software. 

First of all, (i) create a folder containing multi-fasta files of predicted proteins for your genomes. Each file will be treated as a unique genome. I recommend you to name these files significantly because a lot of reports will mention these names. I also suggest keeping the protein names as simple as possible and short. I have another program that you can use for this task: I called it valifasta. Valifasta tries to figure out a combination of strings identifying without redundancy all protein within a multi-fasta file. If such an assignment does not well succeed, valifasta creates a numerical and sequential identification for each protein and uses that instead of the original proteins names.

For run the program (ii), there are a lot of parameters and combinations of those. I recommend you to start simple. Probably you will not reach out a comprehensive interaction network at your first try. As you master the simple, do further steps. As a rule of thumb, a reasonable interaction network should represent the majority of your proteins (number of vertices), possess at least two or three thousand interactions (number of edges) and in average few hundred (<200) interactions per protein. Some proteins can have thousands of connections, but these should not be in a representative number. A configuration that I use to frequently is this one:

./genppidb -expt fixed -w1 7 -cw1 4 -ppcomplete -ppdifftolerated 1  -pphistofilter -dir  summary/

"-expt" set the program for comparing neighbours genes at most "-w1" genes, and using "-cw1" as the smaller number of genes for concluding a conserved neighbourhood.

"-ppcomplete" is an excellent parameter to run at least once for each set of genomes. It does not restrict the number of interactions; it just let it go. The consequence, depending on a small amount of genomes in your folder, is a massive and undesirable number of edges as a final result. Some reports also are created when we settle this parameter. If you decide to restrict the number of interactions, do not use this parameter.

"-ppdifftolerated" give you more interactions as a final result of the phylogenetic profile (pp) analyses. The integer value of this parameter defines the level of tolerance to accept two pp's as similar between genomes.

"-pphistofilter" set the GENPPI to be extremely restrictive when deciding the similarity between two proteins, but only during the phylogenetic profile analyses. The lack of this parameter can also create a much larger number of edges at the final interaction network.

"-dir" is the location and name of the folder where you deposited the multi-fasta files to be processed.

Enjoy it.

Anderson Santos
santosardr@ufu.br
